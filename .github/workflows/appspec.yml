name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: "Terraform-ECS-Deploy"
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    # defaults:
    #   run:
    #     working-directory: terraform-ecs
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.1
          terraform_wrapper: false

      - name: Terraform Init, Plan & Apply
        run: |
          terraform init
          terraform plan -no-color
          terraform apply -auto-approve

  # deploy:
  #   name: "ECS-Deploy"
  #   runs-on: ubuntu-22.04

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: 14
      
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ secrets.AWS_REGION }}
      
  #     - name: Log in to AWS ECR
  #       run: |
  #         aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_REPOSITORY }}
  #     - name: Build Docker image
  #       run: |
  #         REPOSITORY_URI=${{ secrets.AWS_ECR_REPOSITORY }}
  #         IMAGE_TAG=${COMMIT_HASH:=latest}
  #         docker build -t $REPOSITORY_URI:latest -f Dockerfile .
  #         docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  #         docker push $REPOSITORY_URI:latest
  #         docker push $REPOSITORY_URI:$IMAGE_TAG 
 
  #     - name: Deploy to ECS
  #       run: |
  #         aws ecs update-service --cluster ${{ secrets.AWS_ECS_CLUSTER }} --service ${{ secrets.AWS_ECS_SERVICE }} --force-new-deployment    